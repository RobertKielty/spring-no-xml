project.ext {
    springVersion = "4.0.2.RELEASE"
    cucumberJvmVersion = "1.1.7"
    tomcatVersion = '7.0.42'
    junitVersion = '4.11'
    hamcrestVersion = '1.3'
}

apply plugin: "java"
apply plugin: "war"
sourceCompatibility = 1.7
group = "com.test"
version = "1.0"

configurations {
    provided

    cucumberRuntime {
        extendsFrom testRuntime
    }

    cucumber {
        dependencies {
            cucumber "info.cukes:cucumber-core:$project.cucumberJvmVersion"
            cucumber "info.cukes:cucumber-java:$project.cucumberJvmVersion"
            cucumber("info.cukes:cucumber-junit:$project.cucumberJvmVersion") {
                exclude group: 'junit', module: 'junit'
            }
        }
    }
    embeddedTomcat {
        dependencies {
            embeddedTomcat "org.apache.tomcat.embed:tomcat-embed-core:$project.tomcatVersion"
            embeddedTomcat "org.apache.tomcat.embed:tomcat-embed-logging-juli:$project.tomcatVersion"
            embeddedTomcat "org.apache.tomcat.embed:tomcat-embed-jasper:$project.tomcatVersion"
        }
    }
    testing {
        dependencies {
            testing "com.jayway.restassured:rest-assured:2.3.1"
            testing "org.mockito:mockito-all:1.9.5"
            testing "junit:junit-dep:$project.junitVersion"
            testing "org.hamcrest:hamcrest-core:$project.hamcrestVersion"
            testing "org.hamcrest:hamcrest-library:$project.hamcrestVersion"
        }
    }
}

apply plugin: "idea"

idea {
    project {
        jdkName = '1.7'
        languageLevel = '1.7'
        ipr {

            withXml { provider ->
                provider.node.component.find { it.@name == 'VcsDirectoryMappings' }.mapping.@vcs = 'Git'
            }
        }
    }

    module {

        scopes.PROVIDED.plus += configurations.provided

        downloadJavadoc = false
        downloadSources = true
    }
}

apply plugin: 'eclipse'

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:1.2.4'
    }
}

apply plugin: 'tomcat'
apply plugin: 'tomcat-base'

[tomcatRun, tomcatRunWar]*.httpPort = 8181
[tomcatRun, tomcatStop]*.stopPort = 8182
[tomcatRun, tomcatStop]*.stopKey = 'stopKey'
[tomcatRunWar]*.warDirectory = "$buildDir/libs/spring-no-xml-1.0.war"
[tomcatRun, tomcatRunWar]*.contextPath = "/"
[tomcatRun]*.outputFile = file("$buildDir/tomcat-output")
//[tomcatRun]*.daemon = true

dependencies {
    compile "org.springframework:spring-webmvc:$project.springVersion"
    compile "javax.servlet:javax.servlet-api:3.0.1"
    testCompile "org.springframework:spring-test:$project.springVersion"

    testCompile configurations.cucumber
    testCompile configurations.testing

    tomcat configurations.embeddedTomcat
}

task wrapper(type: Wrapper) {
    gradleVersion = 1.11
}

test {
    systemProperty "file.encoding", "UTF-8"
    systemProperty "java.awt.headless", "true"
    include "com/**"
    exclude "com/test/cukes/**"
}

task acceptanceTestsLocal(type: Test) {
    dependsOn assemble, tomcatRun, compileTestJava

    include "com/test/cukes/**"
//    doLast {
//        javaexec {
//            main = "cucumber.api.cli.Main"
//            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
//            args = ['-f', 'html:build/reports/tests/acceptance/local/html',
//                    '-f', 'json:build/reports/tests/acceptance/local/json/index.json',
//                    '-g','com/test/cukes/steps', 'src/test/resources',
//                    ]
//            jvmArgs = []
//        }
//    }

    finalizedBy tomcatStop
}

task integrationTest(type: Test) {
    include "**/*IT.*"
    exclude "com/test/cukes/**"
}

